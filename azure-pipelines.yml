trigger:
  - main
  # paths:
  #   include:
  #     - docker

pr:
  - main

resources:
  - repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: "442ea973-c852-4792-aa09-fab4a9df791f"

  containerRegistry: "commondockerimages.azurecr.io"

  dockerfilecondaPath: "$(Build.SourcesDirectory)/docker/Dockerfile_base_conda"
  tagLatestConda: "latest-conda"
  tagLatest: "latest"

  # Agent VM image name
  vmImageName: "ubuntu-latest"

stages:
  # docs: https://docs.microsoft.com/azure/devops/pipelines/languages/docker
  - stage: BuildDockerImagesAndRunPytest
    displayName: Build docker; run pytests on built images
    jobs:
      - job: BuildDockerAzureMLBaseAndConda
        displayName: docker build azureml base; run pytest
        pool:
          vmImage: $(vmImageName)

        steps:
          - bash: |
              github_organization_prefix="AutonomousSystemsResearch/"
              full_repo_name=$(Build.Repository.Name)
              repo_name=${full_repo_name#"$github_organization_prefix"}

              git_short_hash_main=`git rev-parse --short=7 HEAD`
              git_hash_pr=$(System.PullRequest.SourceCommitId)
              git_short_hash_pr=${git_hash_pr:0:7}
              pr_number=$(System.PullRequest.PullRequestNumber)

              tag_main_git_commit=main-$git_short_hash_main-conda
              tag_pr_git_commit=PR-$pr_number-$git_short_hash_pr-conda
              tag_pr_latest=PR-$pr_number-latest-conda

              echo ""
              echo "full repo name:  $(Build.Repository.Name)"
              echo "repo name:  $repo_name"
              echo "Build Id:  $(Build.BuildId)"
              echo "Build BuildNumber:  $(Build.BuildNumber)"
              echo "Build Reason:  $(Build.Reason)"
              echo "Build Branch Name:  $(Build.SourceBranchName)"
              echo "git commit message: $(Build.SourceVersionMessage)"
              echo "git hash (main branch):  $(Build.SourceVersion)"
              echo "git hash short (main branch): $git_short_hash_main"
              echo "PR branch: $(System.PullRequest.SourceBranch)"
              echo "PR number: $(System.PullRequest.PullRequestNumber)"
              echo "PR ID: $(System.PullRequest.PullRequestId)"
              echo "git hash (PR branch): $(System.PullRequest.SourceCommitId)"
              echo "git hash short (PR branch): : $git_short_hash_pr"

              # set pipeline variables which can be referenced in the jobs that follow to tag docker images appropriately
              echo "##vso[task.setvariable variable=repo_name]$repo_name"
              echo "##vso[task.setvariable variable=tagMainCurrentCondaGitCommitHash]$tag_main_git_commit"
              echo "##vso[task.setvariable variable=tagPRCurrentCondaGitCommitHash]$tag_pr_git_commit"
              echo "##vso[task.setvariable variable=tagPRCurrentCondaLatest]$tag_pr_latest"
              echo "##vso[task.setvariable variable=repoName]$repo_name"
            workingDirectory: $(Build.SourcesDirectory)
            displayName: (debug) print git info

          - bash: |
              echo "repoName: $(repoName)"
              echo "tagMainCurrentCondaGitCommitHash: $(tagMainCurrentCondaGitCommitHash)"
              echo "tagPRCurrentCondaGitCommitHash: $(tagPRCurrentCondaGitCommitHash)"
              echo "tagPRCurrentCondaLatest: $(tagPRCurrentCondaLatest)"
            workingDirectory: $(Build.SourcesDirectory)
            displayName: (debug) print pipeline vars

          - task: Docker@2
            displayName: Build and Push Image
            inputs:
              command: buildAndPush
              repository: $(repoName)
              dockerfile: $(dockerfilecondaPath)
              containerRegistry: $(dockerRegistryServiceConnection)
              ${{ if eq(variables['Build.SourceBranchName'], 'merge') }}:
                tags: |
                  $(tagPRCurrentCondaGitCommitHash)
                  $(tagPRCurrentCondaLatest)

              ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
                tags: |
                  $(tagMainCurrentCondaGitCommitHash)
                  $(tagLatestConda)
                  $(tagLatest)

          # - bash: |
          #     docker run -d -i --name testapp -v $(Build.SourcesDirectory):/workdir -w /workdir $(containerRegistry)/$(repoName):$(tagCurrentConda)
          #   displayName: Run docker container

          # - script: |
          #     docker exec testapp bash -c "pip install -e .; pytest tests/test_dev_fast_run.py -k test_fast_dev_run_cpu"
          #   displayName: Run Pytest on Current Build
